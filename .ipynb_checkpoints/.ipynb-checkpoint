{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import cv2\n",
    "import matplotlib.pyplot as plt\n",
    "import os\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [],
   "source": [
    "#create new directory for silhouettes (thresholded images)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [],
   "source": [
    "if 'silhouettes' not in os.listdir():\n",
    "    os.mkdir('silhouettes')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Removing mega evolution pokemon\n",
    "for root,dirs,files in os.walk('./pokemon/pokemon'):\n",
    "    for file in files:\n",
    "        f = os.path.join(root,file)\n",
    "        if 'mega'in f or '-' in f or 'f' in f:\n",
    "            os.remove(f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "files = []\n",
    "for file in os.listdir('./pokemon/pokemon'):\n",
    "    number = int(file.split('.')[0])\n",
    "    files.append(number)\n",
    "files.sort(key=int)\n",
    "images = []\n",
    "for file in files:\n",
    "    file = 'pokemon/pokemon/' + str(file) + '.png'\n",
    "    images.append(file)\n",
    "# for file in files:\n",
    "#     file = './pokemon/pokemon' + file + '.png'\n",
    "\n",
    "print(images) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "silhouettes = []\n",
    "for image in images:\n",
    "    img = cv2.imread(image,0)\n",
    "    contours,hierarchy = cv2.findContours(img,cv2.RETR_CCOMP,cv2.CHAIN_APPROX_SIMPLE)\n",
    "    external_contours = np.zeros(img.shape)\n",
    "    for i in range(len(0)):\n",
    "        \n",
    "        #External contours\n",
    "        if hierarchy[0][i][3] == -1:\n",
    "            cv2.drawContours(external_contours,contours,i,255,-1)\n",
    "            print(external_contours)\n",
    "            #plt.imshow(external_contours,cmap='gray')\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
